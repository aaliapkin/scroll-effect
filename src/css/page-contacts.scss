@import "css/config.scss";

.contacts-page {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  z-index: 1;

  .dynamic-mode & {
    width: 500px;
    pointer-events: all;
    padding: 20px 60px 60px 0;
    background-color: black;
  }

  .static-mode & {
    margin-top: 60px;
    padding: 60px 0;
    background: radial-gradient(circle at 55% 40%, rgba(23, 25, 28, 0.7) 0%, rgba(14, 14, 15, 0.7) 100%);
    backdrop-filter: blur(10px);
  }
}

.contacts__title {
  font-family: $headerFont, serif;
  text-transform: uppercase;
  color: $light;
  font-size: 4em;
  font-weight: normal;
  margin-bottom: 72px;
  z-index: 5;
}

.contacts__title span {
  flex: 1 0 max-content;
  overflow: hidden;
  white-space: nowrap;
}

.contact__list {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 0 0 0 24px;
  gap: 27px;
  border-left: 4px solid $accent;
}

.contact__item {
  transition: all 200ms ease-in;

  .dynamic-mode & {
    transform: translateX(20px);
    opacity: 0;

    &.active {
      transform: translateX(0px);
      opacity: 1;
    }
  }
}

.contact__item a {
  font-family: $mainFont;
  font-size: 1em;
  letter-spacing: 2px;
  text-transform: uppercase;
  color: $accent;
  display: flex;
  align-items: center;
  transition: all 0.2s ease-out 0s;
}

.contact__item:hover a {
  color: $light !important;
  transition: all 0.2s ease-out 0s;

  cursor: pointer;
}

.contact-item__layout {
  display: grid;
  grid-template-columns: 40px auto;
  grid-template-rows: 12px auto;
  grid-template-areas:
    "icon label"
    "icon link";
  gap: 3px 16px;
}

.contact-item__icon-container {
  grid-area: icon;
  display: flex;
  align-items: center;
  justify-content: center;

  a {
    display: block;
  }
}

.contact-item__label {
  grid-area: label;
  color: rgb(174, 176, 170);
  text-transform: uppercase;
  font-size: 11px;
}

.contact-item__icon-link {
  grid-area: link;
}

.contact__icon {
  width: 32px;
  height: 32px;
  background: $accent;

  .contact__item:hover & {
    background: $light !important;
    cursor: pointer;
  }
}
